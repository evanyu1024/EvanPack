apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
// 应用 Bugtags 插件
// apply plugin: 'com.bugtags.library.plugin'

android {
    def globalConfig = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfig.getAt("compileSdkVersion")
    buildToolsVersion globalConfig.getAt("buildToolsVersion")

    defaultConfig {
        applicationId globalConfig.getAt("applicationId")
        minSdkVersion globalConfig.getAt("minSdkVersion")
        targetSdkVersion globalConfig.getAt("targetSdkVersion")
        versionCode globalConfig.getAt("versionCode")
        versionName globalConfig.getAt("versionName")

        // 开启multidex,解决方法数上限为65536的限制
        multiDexEnabled = true

        /*ndk {
            // 设置支持的 SO 库构架
            abiFilters 'armeabi'// 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
        }*/
    }

    // 签名配置
    signingConfigs {
        release {
            storeFile file("keystore_evan.jks")
            keyAlias "evanpack"
            storePassword "abc123"
            keyPassword "abc123"
//            storePassword System.console().readLine("\nKeystore password: ")
//            keyPassword System.console().readLine("\nKey password: ")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // 多渠道打包(重复代码过多,后面有更简洁的代码实现)
    /*productFlavors {
        store360 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "store360"]
        }
        xiaomi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
        }
        meizu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "meizu"]
        }
    }*/

    // 可以使用360加固替代
    /*productFlavors {
        store360 {}
        xiaomi {}
        meizu {}
    }*/

    productFlavors {
        evan {}
        una {}
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
}

// 使用butterknife需要添加的代码
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
}

/*
bugtags {
    //自动上传符号表功能配置，如果需要根据 build varint 配置，请参考插件详细使用说明
    appKey "ec4af96c497666a74266af43b3c8cbfb"  //这里是你的 appKey
    appSecret "APP_SECRET"    //这里是你的 appSecret，管理员在设置页可以查看
    mappingUploadEnabled true

    //网络跟踪功能配置(企业版)
    trackingNetworkEnabled true
}*/

// libs中存在arr文件时,需要添加一下代码,并需要在dependencies中引用
repositories {
    flatDir {
        dirs 'libs'
    }
}

// logger
repositories {
    maven { url "https://jitpack.io" }
}

dependencies {
    // def dependencies = rootProject.ext.dependencies
    // compile dependencies.appcompat-v7
    // compile dependencies.design
    // apt dependencies.butterknife-compiler
    // compile dependencies.butterknife

    // 引用arr文件
    // compile (name: 'PullToRefresh-release', ext: 'aar')

    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'

    compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["design"]
    compile rootProject.ext.dependencies["constraint-layout"]

    // butterknife
    apt rootProject.ext.dependencies["butterknife-compiler"]
    compile rootProject.ext.dependencies["butterknife"]
    compile rootProject.ext.dependencies["umeng-sdk"]
    compile rootProject.ext.dependencies["retrofit2-gson"]
    compile rootProject.ext.dependencies["retrofit2-rxjava"]
    compile rootProject.ext.dependencies["rxjava"]
    compile rootProject.ext.dependencies["rxandroid"]

    compile 'com.android.support:multidex:1.0.0'
    compile rootProject.ext.dependencies["logger"]
    compile rootProject.ext.dependencies["glide"]
    compile rootProject.ext.dependencies["eventbus"]

    // compile 'com.bugtags.library:bugtags-lib:latest.integration'
}

