apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.jakewharton.butterknife'

android {

    def appConfig = rootProject.ext.android
    compileSdkVersion appConfig.compileSdkVersion
    buildToolsVersion appConfig.buildToolsVersion

    defaultConfig {
        applicationId appConfig.applicationId
        minSdkVersion appConfig.minSdkVersion
        targetSdkVersion appConfig.targetSdkVersion
        versionCode 1
        versionName "1.0.0"

        // 开启multidex，解决方法数上限为65536的限制
        multiDexEnabled = true

        ndk {
            // 设置支持的 SO 库构架
            abiFilters 'armeabi'// 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
        }
    }

    // 签名配置
    signingConfigs {
        release {
            storeFile file("keystore_evan.jks")
            keyAlias "evanpack"
            storePassword "abc123"
            keyPassword "abc123"
//            storePassword System.console().readLine("\nKeystore password: ")
//            keyPassword System.console().readLine("\nKey password: ")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // 多渠道打包(重复代码过多，后面有更简洁的代码实现)
    /*productFlavors {
        store360 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "store360"]
        }
        xiaomi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
        }
        meizu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "meizu"]
        }
    }*/

    // 可以使用360加固替代
    /*productFlavors {
        store360 {}
        xiaomi {}
        meizu {}
    }*/

//    productFlavors {
//        evan {}
//        una {}
//    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    retrolambda {
        javaVersion JavaVersion.VERSION_1_6
    }

    // libs中存在arr文件时，需要添加以下代码，并需要在dependencies中引用
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    // def dependencies = rootProject.ext.dependencies
    // compile dependencies.appcompat-v7
    // compile dependencies.design
    // apt dependencies.butterknife-compiler
    // compile dependencies.butterknife
    // 引用arr文件
    // compile (name: 'PullToRefresh-release', ext: 'aar')
    compile fileTree(include: ['*.jar'], dir: 'libs')

    testCompile 'junit:junit:4.12'
    compile rootProject.ext.dependencies["support-v7-appcompat"]
    compile rootProject.ext.dependencies["support-design"]
    // compile rootProject.ext.dependencies["constraint-layout"]
    // butterknife
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    compile rootProject.ext.dependencies["butterknife"]
    // compile rootProject.ext.dependencies["umeng-sdk"]
    compile rootProject.ext.dependencies["retrofit2-gson"]
    compile rootProject.ext.dependencies["retrofit2-rxjava"]
    compile rootProject.ext.dependencies["rxjava"]
    compile rootProject.ext.dependencies["rxandroid"]
    compile 'com.android.support:multidex:1.0.1'
    compile rootProject.ext.dependencies["logger"]
    compile rootProject.ext.dependencies["glide"]
    compile rootProject.ext.dependencies["eventbus"]
    compile rootProject.ext.dependencies["ultra-ptr"]
    compile rootProject.ext.dependencies["persistentCookieJar"]
    compile rootProject.ext.dependencies["okhttp-loggingInterceptor"]
    compile rootProject.ext.dependencies["wcdb"]

    retrolambdaConfig 'net.orfjackal.retrolambda:retrolambda:2.5.1'
}

